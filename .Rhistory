return(c(series[[i]]$Cripto[1], rsi[length(price)], dif_rsi,series[[i]]$volume[length(price)]))
} , mc.cores=cores)))
saida <- data.frame(saida);
return(saida)
}
#' --------
#' --------
#' RSI
rsi <- rsi_series_iniciais(serie_p_analise)
rsi
rsi <- subset(rsi, as.numeric(as.character(rsi[,2])) < 35) # Observar esse 35
#' --------
#' --------
#' RSI
rsi <- rsi_series_iniciais(serie_p_analise)
rsi <- subset(rsi, as.numeric(as.character(rsi[,2])) < 50) # Observar esse 35
colnames(rsi) <- c("Cripto", "rsi", "dif_rsi","volume")
#' --------
vec <- attributes(rsi)$row.names
serie_p_analise <- lapply(1:length(vec), function(i) serie_p_analise[[vec[i]]])
# MACD
macd_series_iniciais <- function(series){
quant <- length(series)
saida <- t(simplify2array(mclapply(1:quant, function(i){
# atual
x <- series[[i]]$closing
temp <- try(data.frame(data2,TTR::MACD(as.numeric(data2$closing), 12, 26, 9, maType="SMA")), T)
if(typeof(temp) != 'double') temp <- TTR::MACD(as.numeric(data2$closing), 12, 20, 9, maType="SMA")
macd <- temp
# 30 min atras
macd_anterior <- tail(macd,2)[1,]
dif_macd <- tail(macd,1)-macd_anterior
return(c(series[[i]]$Cripto[1], dif_macd))
} , mc.cores=cores)))
saida <- data.frame(saida);
return(saida)
}
#' --------
#' --------
#' MACD
macd <- macd_series_iniciais(serie_p_analise)
series <- serie_p_analise
quant <- length(series)
i=1
# atual
x <- series[[i]]$closing
x
temp <- try(data.frame(data2,TTR::MACD(as.numeric(data2$closing), 12, 26, 9, maType="SMA")), T)
temp
# atual
x <- series[[i]]$closing
temp <- try(TTR:MACD(x, nFast = 12, nSlow = 26, nSig = 9), T)
if(typeof(temp) != 'double') temp <- TTR:MACD(x, nFast = 12, nSlow = 20, nSig = 9)
macd <- temp
if(typeof(temp) != 'double') temp <- TTR::MACD(x, nFast = 12, nSlow = 20, nSig = 9)
macd <- temp
# 30 min atras
macd_anterior <- tail(macd,2)[1,]
dif_macd <- tail(macd,1)-macd_anterior
# MACD
macd_series_iniciais <- function(series){
quant <- length(series)
saida <- t(simplify2array(mclapply(1:quant, function(i){
# atual
x <- series[[i]]$closing
temp <- try(TTR:MACD(x, nFast = 12, nSlow = 26, nSig = 9), T)
if(typeof(temp) != 'double') temp <- TTR::MACD(x, nFast = 12, nSlow = 20, nSig = 9)
macd <- temp
# 30 min atras
macd_anterior <- tail(macd,2)[1,]
dif_macd <- tail(macd,1)-macd_anterior
return(c(series[[i]]$Cripto[1], dif_macd))
} , mc.cores=cores)))
saida <- data.frame(saida);
return(saida)
}
#' --------
#' --------
#' MACD
macd <- macd_series_iniciais(serie_p_analise)
macd
macd <- subset(macd,as.numeric(as.character(macd[,2]))>0 | as.numeric(as.character(macd[,3]))>0 )
colnames(macd) <- c("Cripto", "dif_macd_1","dif_macd_2")
# Series q ficaram
vec <- attributes(macd)$row.names
serie_p_analise <- lapply(1:length(vec), function(i) serie_p_analise[[vec[i]]])
serie_p_analise
View(data)
#AROON
aroon_series_iniciais<-function(series){
quant <- length(series)
saida <- t(simplify2array(mclapply(1:quant, function(i){
#números de períodos
n_aroon <- ifelse(nrow(series[[i]])<14,nrow(series[[i]]),14);
trend <- aroon( series[[i]][,c("highest", "lowest")], n=(n_aroon-1) )
arron_resul <- trend[dim(trend)[1],]
return(c(series[[i]]$symbol[1], arron_resul))
} , mc.cores=cores)))
saida <- data.frame(saida);
return(saida)
}
#' --------
#' --------
#' AROON
aroon <- aroon_series_iniciais(serie_p_analise)
series <- serie_p_analise
quant <- length(series)
i=1
#números de períodos
n_aroon <- ifelse(nrow(series[[i]]) < 14,nrow(series[[i]]), 14);
trend <- TTR::aroon( series[[i]][,c("highest", "lowest")], n=(n_aroon-1) )
trend
arron_resul <- trend[dim(trend)[1],]
c(series[[i]]$Cripto[1], arron_resul)
#AROON
aroon_series_iniciais<-function(series){
quant <- length(series)
saida <- t(simplify2array(mclapply(1:quant, function(i){
#números de períodos
n_aroon <- ifelse(nrow(series[[i]]) < 14,nrow(series[[i]]), 14);
trend <- TTR::aroon( series[[i]][,c("highest", "lowest")], n=(n_aroon-1) )
arron_resul <- trend[dim(trend)[1],]
return(c(series[[i]]$Cripto[1], arron_resul))
} , mc.cores=cores)))
saida <- data.frame(saida);
return(saida)
}
#' --------
#' --------
#' AROON
aroon <- aroon_series_iniciais(serie_p_analise)
aroon
aroon <- subset(aroon,as.numeric(as.character(aroon[,2])) < 30 &# as.numeric(as.character(aroon[,2]))<80 &
as.numeric(as.character(aroon[,3])) > 70 )#& #as.numeric(as.character(aroon[,3]))<70 &
aroon <- aroon[order(as.numeric(as.character(aroon[,2])),decreasing = T),]
colnames(aroon)[1] <- c("Cripto")
#' --------
investir <- merge(aroon,rsi,by="Cripto")
investir
investir <- merge(investir,macd,by="Cripto")
investir <- merge(investir,price,by="Cripto")
#' --------
#' Price
sort(data$date)
#' --------
#' Price
tail(sort(data$date),1)
aroon
data |> filter(Cripto == aroon$Cripto)
data
aroon$Cripto
data |> filter(Cripto %in% aroon$Cripto)
data |> dplyr::filter(Cripto %in% aroon$Cripto)
data |> dplyr::filter( (Cripto %in% aroon$Cripto) & (date ==  tail(sort(data$date),1) ))
data |> dplyr::filter( (Cripto %in% aroon$Cripto) & (date ==  tail(sort(data$date),1) )) |> select(Cripto, closing)
data |> dplyr::filter( (Cripto %in% aroon$Cripto) & (date ==  tail(sort(data$date),1) )) |> dplyr::select(Cripto, closing)
price <-  data |>
dplyr::filter( (Cripto %in% aroon$Cripto) & (date ==  tail(sort(data$date),1) )) |>
dplyr::select(Cripto, closing)
colnames(price) <- c("Cripto", "Preco")
investir <- merge(investir,price,by="Cripto")
investir
price <-  data |>
dplyr::filter( (Cripto %in% aroon$Cripto) & (date ==  tail(sort(data$date),1) )) |>
dplyr::select(Cripto, closing)
colnames(price) <- c("Cripto", "Price")
price
colnames(price) <- c("Cripto", "price")
#' --------
investir <- merge(aroon,rsi,by="Cripto")
investir <- merge(investir,macd,by="Cripto")
investir <- merge(investir,price,by="Cripto")
investir
#' --------
#' Valor de compra. stop loss e stop gain
compra <- cbind(menorcompra=investir$price - .006*investir$price,
maiorcompra=investir$price + .006*investir$price)
compra
stop_loss <- investir$price- 0.035*investir$price
stop_gain <- cbind(ganho1p=investir$price+ 0.01*investir$price,
ganho2p=investir$price+ 0.02*investir$price,
ganho3p=investir$price+ 0.03*investir$price)
investir <- cbind(investir,compra, stop_loss, stop_gain)
investir
hora.verificacao <- format(Sys.time(), "%a %b %d %X %Y")
hora.verificacao
hora.verificacao <- format(Sys.time(), "%X - %a %b %d  %Y")
hora.verificacao
hora.verificacao <- format(Sys.time(), "%X - %A %d %b   %Y")
hora.verificacao
hora.verificacao <- format(Sys.time(), "%X - %A,  %d.%b.%Y")
hora.verificacao
# Token do Bot:
bot <- telegram.bot::Bot(token = "1406230646:AAEfXOBl5wCdK5iACD8q3BQ57nNNZsQQxyI")
# ID Chat Jodavid - "355364195"
chatid <- c("355364195","920083323")
investir
# Texto:
texto <- paste(
emojifont::emoji('rotating_light'),"PREÇO DO BITCOIN",emojifont::emoji('rotating_light'),"\n\n",
emojifont::emoji('dart')," Cripto: ",investir$Cripto,"\n",
emojifont::emoji('moneybag')," Valor: R$",investir$price,"\n\n",
emojifont::emoji('clock3'),"Hora:",format(Sys.time(), "%X"),"\n\n",
"Até Logo!","\n"
)
texto
# ID Chat Pedro - "920083323"
# ID Chat Jodavid - "355364195"
chatid <- c("355364195")
# Texto:
texto <- paste(
emojifont::emoji('rotating_light'),"PREÇO DO BITCOIN",emojifont::emoji('rotating_light'),"\n\n",
emojifont::emoji('dart')," Cripto: ",investir$Cripto,"\n",
emojifont::emoji('moneybag')," Valor: R$",investir$price,"\n\n",
emojifont::emoji('clock3'),"Hora:",format(Sys.time(), "%X"),"\n\n",
"Até Logo!","\n"
)
length(chatid)
# Envio das mensagens
for (j in 1:length(chatid)){
bot$sendMessage(chat_id = chatid[j],
text = texto
)
}
bot$sendMessage(chat_id = chatid[j],
text = texto
)
# Token do Bot:
bot <- telegram.bot::Bot(token = "1778236079:AAGV2ojus21kRQQc78nQESy51LjaN-0YBNY")
# ID Chat Pedro - "920083323"
# ID Chat Jodavid - "355364195"
chatid <- c("355364195")
# Texto:
texto <- paste(
emojifont::emoji('rotating_light'),"PREÇO DO BITCOIN",emojifont::emoji('rotating_light'),"\n\n",
emojifont::emoji('dart')," Cripto: ",investir$Cripto,"\n",
emojifont::emoji('moneybag')," Valor: R$",investir$price,"\n\n",
emojifont::emoji('clock3'),"Hora:",format(Sys.time(), "%X"),"\n\n",
"Até Logo!","\n"
)
# Envio das mensagens
for (j in 1:length(chatid)){
bot$sendMessage(chat_id = chatid[j],
text = texto
)
}
bot$sendMessage(chat_id = chatid[j],
text = texto
)
investir$Cripto
# Envio das mensagens
for (j in 1:length(chatid)){
bot$sendMessage(chat_id = chatid[j],
text = texto
)
}
# Texto:
texto <- paste(
emojifont::emoji('rotating_light'),"ATIVOS SELECIONADOS PARA HOJE!",emojifont::emoji('rotating_light'),"\n\n",
emojifont::emoji('dart')," Cripto: ",investir$Cripto,"\n",
emojifont::emoji('moneybag')," Valor: R$",investir$price,"\n\n",
emojifont::emoji('clock3'),"Hora:",format(Sys.time(), "%X"),"\n\n",
"Até Logo!","\n"
)
# Envio das mensagens
for (j in 1:length(chatid)){
bot$sendMessage(chat_id = chatid[j],
text = texto
)
}
investir
texto
nrow(text)
nrow(texto)
length(texto)
# Envio das mensagens
for (j in 1:length(chatid)){
for(t in 1:length(texto)){
bot$sendMessage(chat_id = chatid[j],
text = texto[t]
)
}
}
# Envio das mensagens
for(t in 1:length(texto)){
for (j in 1:length(chatid)){
bot$sendMessage(chat_id = chatid[j],
text = texto[t]
)
}
}
bot$sendMessage(chat_id = chatid[j],
text = texto[t]
)
bot$sendMessage(chat_id = chatid[j],
text = texto[t]
)
# Envio das mensagens
for(t in 1:length(texto)){
for (j in 1:length(chatid)){
bot$sendMessage(chat_id = chatid[j],
text = texto[t]
)
}
}
# Texto:
texto <- paste(
emojifont::emoji('rotating_light'),"ATIVOS SELECIONADOS PARA HOJE!",emojifont::emoji('rotating_light'),"\n\n",
emojifont::emoji('dart')," Cripto: ",investir$Cripto,"\n",
emojifont::emoji('moneybag')," Valor: R$",round(investir$price,4),"\n\n",
emojifont::emoji('clock3'),"Hora:",format(Sys.time(), "%X"),"\n\n",
"Até Logo!","\n"
)
texto
investir
# Texto:
texto <- paste(
emojifont::emoji('rotating_light'),"ATIVOS SELECIONADOS PARA HOJE!",emojifont::emoji('rotating_light'),"\n\n",
emojifont::emoji('dart')," Cripto: ",investir$Cripto,"\n",
emojifont::emoji('moneybag')," Valor: R$",round(investir$price,4),"\n\n",
emojifont::emoji('moneybag')," Maior Compra (Menor Compra): R$",round(investir$maiorcompra,4),"(",menorcompra,")","\n\n",
emojifont::emoji('clock3'),"Hora:",format(Sys.time(), "%X"),"\n\n",
"Até Logo!","\n"
)
# Texto:
texto <- paste(
emojifont::emoji('rotating_light'),"ATIVOS SELECIONADOS PARA HOJE!",emojifont::emoji('rotating_light'),"\n\n",
emojifont::emoji('dart')," Cripto: ",investir$Cripto,"\n",
emojifont::emoji('moneybag')," Valor: R$",round(investir$price,4),"\n\n",
emojifont::emoji('moneybag')," Maior Compra (Menor Compra): R$",round(investir$maiorcompra,4),"(",round(investir$menorcompra,4),")","\n\n",
emojifont::emoji('clock3'),"Hora:",format(Sys.time(), "%X"),"\n\n",
"Até Logo!","\n"
)
texto
# Texto:
texto <- paste(
emojifont::emoji('rotating_light'),"ATIVOS SELECIONADOS PARA HOJE!",emojifont::emoji('rotating_light'),"\n\n",
emojifont::emoji('dart')," Cripto: ",investir$Cripto,"\n",
emojifont::emoji('moneybag')," Valor: R$",round(investir$price,4),"\n\n",
emojifont::emoji('moneybag')," Maior Compra (Menor Compra): R$",round(investir$maiorcompra,4),"(",round(investir$menorcompra,4),")","\n\n",
emojifont::emoji('moneybag')," Stop Loss: R$",round(investir$stop_loss,4),"\n\n",
emojifont::emoji('moneybag')," Ganho 1%:: R$",round(investir$ganho1p,4),"\n",
emojifont::emoji('moneybag')," Ganho 2%:: R$",round(investir$ganho2p,4),"\n",
emojifont::emoji('moneybag')," Ganho 3%:: R$",round(investir$ganho3p,4),"\n\n",
emojifont::emoji('clock3'),"Hora:",format(Sys.time(), "%X"),"\n\n",
"Até Logo!","\n"
)
texto
bot$sendMessage(chat_id = chatid[j],
text = texto[t]
)
# Texto:
texto <- paste(
emojifont::emoji('rotating_light'),"ATIVOS SELECIONADOS PARA HOJE!",emojifont::emoji('rotating_light'),"\n\n",
emojifont::emoji('dart')," Cripto: ",investir$Cripto,"\n",
emojifont::emoji('moneybag')," Valor: R$",round(investir$price,4),"\n\n",
emojifont::emoji('moneybag')," Maior Compra: R$",round(investir$maiorcompra,4),"\n",
emojifont::emoji('moneybag')," Menor Compra: R$",round(investir$menorcompra,4),"\n\n",
emojifont::emoji('moneybag')," Stop Loss: R$",round(investir$stop_loss,4),"\n\n",
emojifont::emoji('moneybag')," Ganho 1%: R$",round(investir$ganho1p,4),"\n",
emojifont::emoji('moneybag')," Ganho 2%: R$",round(investir$ganho2p,4),"\n",
emojifont::emoji('moneybag')," Ganho 3%: R$",round(investir$ganho3p,4),"\n\n",
emojifont::emoji('clock3'),"Hora:",format(Sys.time(), "%X"),"\n\n",
"Até Logo!","\n"
)
bot$sendMessage(chat_id = chatid[j],
text = texto[t]
)
#'--
Hoje <- Sys.Date()
j=1
#'--
QutdeDias <- 1
#' -----
Data_Anterior <- Hoje-j
Data_Anterior
file.exists(paste0("dados/dados_",Data_Anterior,".csv"))
file.exists(paste0("dados/dados_",Data_Anterior,".csv"))
!file.exists(paste0("dados/dados_",Data_Anterior,".csv"))
#' ------------------------------------------------
#'     Scraping Ativos do Mercado Bitcoin
#'
#' Objetivo: Pegar precos dos ativos até X dias para trás
#' ------------------------------------------------
source("R/Funcoes_para_Scraping_Ativos_Mercado_Bitcoin.R")
#'--
criptos <- moedas_MBC()
moedas <- unlist(criptos[1])
#'--
Hoje <- Sys.Date()
j=1
#'--
QutdeDias <- 1
#'--
while(j <= QutdeDias ){
#' -----
Data_Anterior <- Hoje-j
if(!file.exists(paste0("dados/dados_",Data_Anterior,".csv"))) {
#' -----
#' aplicando loop para obter os indicadores das ações armazenados em um só dataframe
retornos_cripto <- purrr::map2_df(moedas,as.Date(Data_Anterior),day_summary_MBC)
#'--
data_frame_cripto <- map_to_dataframe(retornos_cripto)
#'--
write.csv2(data_frame_cripto,paste0("dados/dados_",Data_Anterior,".csv"),row.names = F)
#' -----
j=j+1
print(Data_Anterior)
#' -----
}
}
#' -----
#' ------------------------------------------------
#'     Scraping Ativos do Mercado Bitcoin
#'
#' Objetivo: Pegar precos dos ativos até X dias para trás
#' ------------------------------------------------
source("R/Funcoes_para_Scraping_Ativos_Mercado_Bitcoin.R")
#'--
criptos <- moedas_MBC()
moedas <- unlist(criptos[1])
#'--
Hoje <- Sys.Date()
j=1
#'--
QutdeDias <- 30
#'--
while(j <= QutdeDias ){
#' -----
Data_Anterior <- Hoje-j
if(!file.exists(paste0("dados/dados_",Data_Anterior,".csv"))) {
#' -----
#' aplicando loop para obter os indicadores das ações armazenados em um só dataframe
retornos_cripto <- purrr::map2_df(moedas,as.Date(Data_Anterior),day_summary_MBC)
#'--
data_frame_cripto <- map_to_dataframe(retornos_cripto)
#'--
write.csv2(data_frame_cripto,paste0("dados/dados_",Data_Anterior,".csv"),row.names = F)
#' -----
j=j+1
print(Data_Anterior)
#' -----
}
}
#' -----
j
#'--
QutdeDias <- 30
#'--
while(j <= QutdeDias ){
#' -----
Data_Anterior <- Hoje-j
if(!file.exists(paste0("dados/dados_",Data_Anterior,".csv"))) {
#' -----
#' aplicando loop para obter os indicadores das ações armazenados em um só dataframe
retornos_cripto <- purrr::map2_df(moedas,as.Date(Data_Anterior),day_summary_MBC)
#'--
data_frame_cripto <- map_to_dataframe(retornos_cripto)
#'--
write.csv2(data_frame_cripto,paste0("dados/dados_",Data_Anterior,".csv"),row.names = F)
#' -----
}
j=j+1
print(Data_Anterior)
#' -----
}
#' -------------------------------------------------------------------
#' Script principal para rodar o Scraping e enviar para o celular
#'
#' 22.03.2022
#' -------------------------------------------------------------------
# Fazendo Scraping
source("Scraping_Ativos_Mercado_Bitcoin.R")
# Fazendo Analise
source("Analise_dos_precos_criptos_Mercado_BitCoin.R")
# Enviando Mensagem
source("Script_envio_msg_telegram_contrab.R")
View(investir)
serie_p_analise
#' --------
#' --------
#' AROON
aroon <- aroon_series_iniciais(serie_p_analise)
aroon
aroon <- subset(aroon,as.numeric(as.character(aroon[,2])) < 30 |
as.numeric(as.character(aroon[,3])) > 70 )
aroon <- aroon[order(as.numeric(as.character(aroon[,2])),decreasing = T),]
colnames(aroon)[1] <- c("Cripto")
aroon
#' --------
#' Price
price <-  data |>
dplyr::filter( (Cripto %in% aroon$Cripto) & (date ==  tail(sort(data$date),1) )) |>
dplyr::select(Cripto, closing)
colnames(price) <- c("Cripto", "price")
#' --------
investir <- merge(aroon,rsi,by="Cripto")
investir <- merge(investir,macd,by="Cripto")
investir <- merge(investir,price,by="Cripto")
#' --------
#' Valor de compra. stop loss e stop gain
compra <- cbind(menorcompra=investir$price - .006*investir$price,
maiorcompra=investir$price + .006*investir$price)
stop_loss <- investir$price- 0.035*investir$price
stop_gain <- cbind(ganho1p=investir$price+ 0.01*investir$price,
ganho2p=investir$price+ 0.02*investir$price,
ganho3p=investir$price+ 0.03*investir$price)
investir <- cbind(investir,compra, stop_loss, stop_gain)
hora.verificacao <- format(Sys.time(), "%X - %A,  %d.%b.%Y")
hora.verificacao
# Enviando Mensagem
source("Script_envio_msg_telegram_contrab.R")
